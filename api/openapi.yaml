openapi: 3.0.0
info:
  description: A web application for the management of a pinball league
  title: PinMan - Pinball League Management
  version: 0.5.0
servers:
  - url: http://localhost:8080/api
paths:
  ###
  # User/Authentication Endpoints
  ###
  /users/register:
    post:
      description: Registers a new user account
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userRegister'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userResponse'
          description: User was registered successfully
        "400":
          $ref: "#/components/responses/badRequest"
      tags:
        - users
  /auth/login:
    post:
      description: Retrieve an access and refresh token to authenticate requests to the api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userLogin'
        required: true
      responses:
        "200":
          content:
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/tokenResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResponse'
          description: User was registered authenticated
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
      tags:
        - auth
  /auth/refresh:
    get:
      description: Refresh an access token
      security:
        - pinmanAuth: []
      responses:
        "200":
          content:
            application/x-www-form-urlencoded:
              schema:
                $ref: '#/components/schemas/tokenResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/tokenResponse'
          description: Token successfully refreshed
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
      tags:
        - auth
  /users/me:
    get:
      description: Retrieve profile information of the currently authenticated user
      security:
        - pinmanAuth:
            - user
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userResponse'
          description: Successful response
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
      tags:
        - users
  ###
  # League Endpoints
  ###
  /leagues:
    get:
      description: Retrieve a list of leagues
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/leagueListResponse'
          description: Successful response
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
      tags:
        - leagues
    post:
      description: Create a new league
      security:
        - pinmanAuth:
            - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/leagueCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/leagueResponse'
          description: League was created successfully
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
      tags:
        - leagues
  /leagues/{slug}:
    get:
      description: Retrieve a league by slug
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/leagueResponse'
          description: Successful response
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
      tags:
        - leagues
  ###
  # Location Endpoints
  ###
  /locations:
    get:
      description: Retrieve a list of locations
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locationListResponse'
          description: Successful response
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
      tags:
        - locations
    post:
      description: Create a new location
      security:
        - pinmanAuth:
            - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/locationCreate'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locationResponse'
          description: Location was created successfully
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
      tags:
        - locations
  /locations/{slug}:
    get:
      description: Retrieve a location by slug
      parameters:
        - in: path
          name: slug
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/locationResponse'
          description: Successful response
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "403":
          $ref: "#/components/responses/forbidden"
        "404":
          $ref: "#/components/responses/notFound"
      tags:
        - locations
components:
  responses:
    unauthorized:
      description: unauthorized access for a lack of authentication
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    forbidden:
      description: forbidden access for a lack of sufficient privileges
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    badRequest:
      description: request was malformed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
    notFound:
      description: resource was not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/errorResponse'
  schemas:
    ###
    # MODELS
    ###
    league:
      example:
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
        slug: slug
        ownerId: ownerId
        location:
          id: id
          name: name
          address: address
          slug: slug
          pinball_map_id: pinball_map_id
          created_at: created_at
          updated_at: updated_at
      properties:
        id:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: requred
        slug:
          type: string
          x-oapi-codegen-extra-tags:
            binding: requred
        ownerId:
          type: string
          x-oapi-codegen-extra-tags:
            binding: requred
        location:
          allOf:
            - $ref: '#/components/schemas/location'
            - x-oapi-codegen-extra-tags:
                binding: requred
              x-go-type: Location
        created_at:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        updated_at:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
      required:
        - id
        - name
        - slug
        - ownerId
        - location
        - created_at
        - updated_at
    user:
      example:
        role: role
        updated_at: updated_at
        name: name
        created_at: created_at
        id: id
        email: email
      properties:
        id:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        email:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required,email
        role:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        created_at:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        updated_at:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
      type: object
      required:
        - id
        - name
        - email
        - role
        - created_at
        - updated_at
    location:
      example:
        id: id
        name: name
        address: address
        slug: slug
        pinball_map_id: pinball_map_id
        created_at: created_at
        updated_at: updated_at
      properties:
        id:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        address:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        slug:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        pinball_map_id:
          type: integer
          x-oapi-codegen-extra-tags:
            binding: required
        created_at:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        updated_at:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
      type: object
      required:
        - id
        - name
        - address
        - slug
        - pinball_map_id
        - created_at
        - updated_at
    ###
    # Generic Request/Response Schemas
    ###
    errorResponse:
      required:
        - status
        - title
        - detail
      properties:
        status:
          type: integer
        title:
          type: string
        detail:
          type: string
        meta:
          type: object
      type: object
    ###
    # User/Authentication Request/Response Schemas
    ###
    userRegister:
      properties:
        name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        email:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required,email
        password:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required,min=8
        passwordConfirm:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
      type: object
      required:
        - name
        - email
        - password
        - passwordConfirm
    userLogin:
      properties:
        username:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        password:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
      type: object
      required:
        - username
        - password
    userResponse:
      example:
        user:
          role: role
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
          email: email
      properties:
        user:
          $ref: '#/components/schemas/user'
      type: object
    tokenResponse:
      example:
        expire: 2022-12-15T17:41:57-05:00
        access_token: access_token
      properties:
        expire:
          type: string
        access_token:
          type: string
      type: object
      required:
        - expire
        - access_token
    ###
    # League Request/Response Schemas
    ###
    leagueResponse:
      example:
        league:
          updated_at: updated_at
          name: name
          created_at: created_at
          id: id
          slug: slug
          ownerId: ownerId
          location:
            id: id
            name: name
            address: address
            slug: slug
            pinball_map_id: pinball_map_id
            created_at: created_at
            updated_at: updated_at
      properties:
        league:
          $ref: '#/components/schemas/league'
      type: object
    leagueListResponse:
      example:
        leagues:
          - updated_at: updated_at
            name: name
            created_at: created_at
            id: id
            slug: slug
            ownerId: ownerId
            location:
              id: id
              name: name
              address: address
              slug: slug
              pinball_map_id: pinball_map_id
              created_at: created_at
              updated_at: updated_at
      properties:
        leagues:
          type: array
          items:
            $ref: '#/components/schemas/league'
      type: object
      required:
        - leagues
    leagueCreate:
      properties:
        name:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        locationId:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
        slug:
          type: string
          x-oapi-codegen-extra-tags:
            binding: required
      type: object
      required:
        - name
        - locationId
        - slug
    ###
    # Location Request/Response Schemas
    ###
    locationResponse:
      example:
        location:
          id: id
          name: name
          address: address
          slug: slug
          pinball_map_id: pinball_map_id
          created_at: created_at
          updated_at: updated_at
      properties:
        location:
          $ref: '#/components/schemas/location'
      type: object
    locationListResponse:
      example:
        locations:
          - id: id
            name: name
            address: address
            slug: slug
            pinball_map_id: pinball_map_id
            created_at: created_at
            updated_at: updated_at
      properties:
        locations:
          type: array
          items:
            $ref: '#/components/schemas/location'
      type: object
      required:
        - locations
    locationCreate:
      example:
        pinball_map_id: pinball_map_id
      properties:
        pinball_map_id:
          type: integer
          x-oapi-codegen-extra-tags:
            binding: required
      type: object
      required:
        - pinball_map_id
  securitySchemes:
    pinmanAuth:
      flows:
        password:
          tokenUrl: "{{baseUrl}}/auth/login"
          refreshUrl: "{{baseUrl}}/auth/refresh"
          scopes:
            user: allows interacting with the system as a registered user
            admin: allows reading resources
      type: oauth2
